stages:
  - build
  - test
  - deploy

cache:
  key: $CI_COMMIT_REF_SLUG
  paths:
    - node_modules
    - .npm/

building:
  image: node:lts-alpine
  stage: build
  tags: ['docker']
  script:
    - node -v && npm -v
    - npm install --progress=false
    - npm run build
    - pwd && ls -la
  artifacts:
    expire_in: 60 mins
    paths:
      - dist/
  only: [main, develop]

testing:
  image: node:lts-alpine
  stage: test
  tags: ['docker']
  needs: ['building']
  script:
    - npm run test:unit:ci
  only: [main, develop]

staging:
  stage: deploy
  tags: ['shell']
  needs: ['building', 'testing']
  script:
    - cd $RUTA_PROYECTO_DEV
    - git pull
    - docker compose up --build -d justicia-fe-dev
    - cd $RUTA_PROYECTO_TEST
    - git pull
    - docker compose up --build -d justicia-fe-test
  only:
    - develop

production:
  stage: deploy
  tags: ['shell']
  needs: ['building', 'testing']
  script:
    - cd $RUTA_PROYECTO_UAT
    - git pull
    - docker compose up --build -d justicia-fe-uat
    # - cd $RUTA_PROYECTO
    # - git pull
    #- docker compose up --build -d justicia-frontend
  only:
    - main

ui-e2e:
  image: cypress/browsers:node18.12.0-chrome106-ff106
  stage: deploy
  tags: ['docker']
  needs: ['building', 'testing']
  script:
    - npm ci
    - npm run test:e2e
  artifacts:
    when: always
    paths:
      - cypress/videos/**/*.mp4
      - cypress/screenshots/**/*.png
    expire_in: 1 day
  allow_failure: true
  only: [main, develop]

sonarqube-check:
  image: 
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  stage: test
  tags: ['docker']
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script: 
    - sonar-scanner
  allow_failure: true
  only: [main, develop]
